##############################################################
# ███████╗██╗   ██╗ █████╗ ███████╗███████╗██████╗ ██╗   ██╗ #
# ██╔════╝██║   ██║██╔══██╗██╔════╝██╔════╝██╔══██╗██║   ██║ #
# █████╗  ██║   ██║███████║███████╗█████╗  ██████╔╝██║   ██║ #
# ██╔══╝  ╚██╗ ██╔╝██╔══██║╚════██║██╔══╝  ██╔══██╗╚██╗ ██╔╝ #
# ███████╗ ╚████╔╝ ██║  ██║███████║███████╗██║  ██║ ╚████╔╝  #
# ╚══════╝  ╚═══╝  ╚═╝  ╚═╝╚══════╝╚══════╝╚═╝  ╚═╝  ╚═══╝   #
##############################################################
#
#	Auteur	:
#		-> ZarTek (ZarTek.Creole@GMail.Com)
#
#	Website :
#		-> github.com/ZarTek-Creole/TCL-EvaServ
#
#	Support	:
#		-> github.com/ZarTek-Creole/TCL-EvaServ/issues
#
#	Docs	:
#		-> github.com/ZarTek-Creole/TCL-EvaServ/wiki
#
#	LICENSE :
#		-> GNU General Public License v3.0
#		-> github.com/ZarTek-Creole/TCL-EvaServ/blob/main/LICENSE.txt
#
#	Code origine:
#		-> TiSmA (TiSmA@eXolia.fr)
#
##############################################################

################## Lisez-moi
#
# Exemple de fichier de configuration pour les services EvaServ.
# Après avoir apporté les modifications appropriées à ce fichier,
# placez-le sous le nom "EvaServ.conf".
#
###

#########################################
#-->			UpLink				 <--#
#########################################
#
# Cette section est utilisée pour configurer EvaServ
# pour se connecter à votre réseau IRC.
#
# Votre serveur IRCD doit avoir une configuration 
# correspondante pour autoriser le service EvaServ à y accéder
#
# Un exemple de configuration pour UnrealIRCd compatible avec la Link ci-dessous
# et la configuration de serverinfo ressemblerait à:
#
#	link EvaServ.Extra-Cool.FR
#	{
#		username *;
#		hostname *;
#		bind-ip "127.0.0.1";
#		port 7000;
#		hub *;
#		password-connect "mypassword";
#		password-receive "mypassword";
#		class servers;
#	};
#	ulines { EvaServ.Extra-Cool.FR; };
#	listen 127.0.0.1:7000;
#
#########################################

###
#
# L'adresse IP ou le nom d'hôte du serveur IRC auquel vous souhaitez connecter le service.
# Habituellement, vous voudrez connecter le service sur 127.0.0.1 (aka localhost).
### ->
set UPLINK(hostname)			"127.0.0.1"

###
# Activez avec la valeur 1 si le service doit se connecter à l'aide de SSL.
# Desactiver avec la valeur 0
### ->
set UPLINK(mode_ssl)			1

# Le port auquel se connecter.
# L'IRCd *DOIT* être configuré pour écouter sur ce port et pour accepter les connexions de serveur.
# Reportez-vous à votre documentation IRCd pour savoir comment procéder.
set UPLINK(port)				"7000"

###
# Le mot de passe à envoyer au serveur IRC pour l'authentification.
# Cela doit correspondre au bloc de Link sur votre IRCd.
#
# Reportez-vous à votre documentation IRCd pour plus d'informations sur les blocs de Link.
### ->
set UPLINK(password)			"mypassword"

###
# Activez le mode debug socket?
### ->
set SERVICE(mode_debug)			0

# Afficher des informations suplementaires en partyline?
set config(putlog_info)			0

#########################################
#-->			ServerInfo			 <--#
#########################################

###
# Le nom d'hôte de EvaServ service, il ne doit avoir aucun conflit avec d'autres noms de serveur sur le reste de votre réseau IRC.
# Notez qu'il n'est pas nécessaire qu'il s'agisse d'un nom d'hôte existant, mais simplement d'un nom d'hôte qui n'est pas déjà sur votre réseau.
### ->
set SERVICE(hostname)			"EvaServ.Extra-Cool.FR"

###
# Quel ID de serveur utiliser pour cette connexion?
# Remarque: Ceci doit être utilisé pour les IRCds TS6/P10.
# Reportez-vous à votre documentation IRCd pour voir si cela est nécessaire.
### ->

# Si vous utilisez un "ancien serveur ircd" commentez ceci:
set SERVICE(sid)				"00C"
# et decommentez cela:
#set SERVICE(sid)				""

###
# S'il est défini, cela permettra aux utilisateurs de laisser les services leur envoyer des PRIVMSG au lieu de NOTICE.
# Valeur: 1 pour oui, 0 pour non
### ->
set SERVICE(use_privmsg)		1

#########################################
#-->			Services			 <--#
#########################################

###
# Le nom du client EvaServ.
### ->
set SERVICE_BOT(name)			"EvaServ"

###
# Le nom d'hôte du client EvaServ.
### ->
set SERVICE_BOT(hostname)		"EvaServ.Extra-Cool.FR"

###
# Le realname du client EvaServ.
### ->
set SERVICE_BOT(gecos)			"Visit: https://git.io/JOG1k"

###
# Les modes que le client doit utiliser.
# Ne modifiez pas ceci à moins que vous ne sachiez ce que vous faites.
# Ces modes sont très spécifiques à IRCd. Laissé les valeurs par défaut, a moins savoir ce que vous faite.
# Notez que la définition incorrecte de cette option pourrait potentiellement casser/crasher une partie, sinon la totalité, de l'utilisation du client. 
##
# DefaultPseudoclientModes :
#	*	InspIRCd 2.0				:	+I
#	*	Ratbox 3.0+					:	+oiS
#	*	InspIRCd 3					:	+I
#	*	Bahamut 1.8.x				:	+
#	*	hybrid-7.2.3+plexus-3.0.1	:	+iU
#	*	Charybdis 3.4+				:	+oiS
#	*	InspIRCd 1.2				:	+I
#	*	ngIRCd						:	+oi
#	*	ircd-hybrid 8.2.23+			:	+oi
#	*	UnrealIRCd 3.2.x			:	+Soiq
#	*	UnrealIRCd 4+				:	+Soiq
#
### ->
set SERVICE_BOT(mode_service)	"+Soiq"

###
# Le canal de journalisation d'activité que le client doit utiliser.
### ->
set SERVICE_BOT(channel)		"#Services"

###
# Les modes du salon de logs (service_channel).
#
# mode	Description				Restrictions
#	i	Invite only.			Requires people to be /INVITE'd to the channel or be on the +I (Invite Exceptions)
#								list (for that latter, see the List modes section above)	
#								Requires +o or higher
#
#	k	Require users to specify a channel key in order to join (/JOIN #chan key).
#		Example: +k secret															
#								Requires +h or higher
#
#	L	Channel link.
#		If the +l user limit (see below) is reached then users will automatically be redirected to this channel. #		Example: +L #something
#								Requires +o or higher
#
#	l	Limit the amount of users that may be in the channel.
#		If the limit is reached then any new JOIN's are rejected (see also +L above).
#								Requires +o or higher
#
#	m	Moderated channel.		Only people with +v or higher (+vhoaq) may speak.	
#								Requires +h or higher
#
#	n	No external messages.	If you don't set +n then users outside the channel may still send messages to it.
#								Thus, almost everyone will set their channel +n.
#								Requires +h or higher
#
#	p	Private channel.		Partially conceals the existence of the channel.
#								Users cannot see this channel name unless they are a member of it. For example,
#								if you /WHOIS a user who is on a +p channel, this channel is omitted from the response
#								- unless you are on the same channel. IRC Operators will always see +p channels and its members.	#								Requires +o or higher
#
#	r	Channel is registered at Services	
#								Set by services
#
#	s	Secret channel.		Extends the functionality of +p (above), but in addition to this, 
#								it will act as if the channel does not exist at all for queries like /TOPIC, /LIST and /NAMES.
#								One exception to this is that it will always respond to the /MODE command.
#								IRC Operators will always see +s channels and its members.
#								Requires +o or higher
### ->
set SERVICE_BOT(mode_channel)	"+Osnt"

###
# Le mode user de EvaServ quand elle join un salon.
#
# mode	Description		Restrictions
#	v	Voice.			This makes the user able to speak in +m/+M channels. User can also still speak if banned.
#						May be set by +hoaq users
#
#	h	Half-Op.		Gives some of the usual channel operator rights, but not all.
#						They are basically a light version of channel ops.	May be set by +oaq users
#
#	o	Channel Op.	This is the channel operator privilege everyone knows about,
#						allows the user to do almost all administrative tasks in a channel such as /KICK, /MODE, etc..
#						May be set by +oaq users
#
#	a	Channel Admin.	A level above channel ops but with no special extra privileges except for one: 
#						people below chanadmin (so +h/+o) cannot KICK +a people.
#						May be set by +q users
#
#	q	Channel Owner.	The highest level. Channel owners can't be kicked by any level below.
#						Usually there's only one person with +q and the mode is set by services.	
#						Normal users can't set this
### ->
set SERVICE_BOT(mode_user)		"+o"

#########################
# Configuration Service #
#########################

#--> Ident du service
set SERVICE_BOT(username)		"EvaServ"

#--> Salon du service
set SERVICE_BOT(channel_logs)	"#Eva"

#--> Chanmode du service
set config(smode)				"ntsO"

#--> Mode Salon (q=owner a=protect o=op h=halfop v=voice n=user)
set config(chanmode)			"qo"

#########################
# Configuration Options #
#########################

#--> debug mode (socket)?
set SERVICE(mode_debug)			0

#--> Prefix des commandes
set config(prefix)				"!"

# Longueur minimun d'un password qu'un utilisateur doit fournir
set config(password_length)		5

# Longueur maximun d'un nick pour s enregistrer
set config(nick_length)		10

# format des dates : "%d-%m-%Y" = 30-12-2022
set config(date_format)		"%d-%m-%Y"

#--> Affichage du pseudo dans les Kicks/Kills/Glines... (0=Off 1=On)
set config(rnick)				0

#--> FloodControl: Nombre de phrases avant l'ignore
set config(Throttling)	5

#--> Durée de l'ignore en secondes
set config(Flood_IgnoreTime)	30

#--> Durée d'un gline en secondes
set config(gline_duration)		86400

#--> PREFIXE DES COMMANDE par exemple pour !<cmd> : !
set CMD(prefixe)		"!"

# Les commandes accessible uniquement en privé et bloquer en publique (salon)
set CMD(PUBLIC_DISALLOW) 	[list 												\
								"auth"											\
								"newpass"										\
							];

#########################
# Configuration Raisons #
#########################

#--> Raison du kill pour client IRC
set config(rclient)				"L'accès à ce t'chat est un privilège et non un droit. (CI)"

#--> Raison du kill pour Badhost
set config(rhost)				"L'accès à ce t'chat est un privilège et non un droit. (Ip refusé)"

#--> Raison du kill pour Badident
set config(rident)				"L'accès à ce t'chat est un privilège et non un droit. (IR)"

#--> Raison du kill pour Badreal
set config(rreal)				"L'accès à ce t'chat est un privilège et non un droit. (BR)"

#--> Raison du kill pour Badnick
set config(ruser)				"L'accès à ce t'chat est un privilège et non un droit. (BN)"

#--> Raison lors d'un restart
set config(raison)				"Maintenance Technique"

##########################
# Configuration Couleurs #
##########################

#--> Code couleur des evenements
set config(console_com)			"02"

#--> Code couleur decoration
set config(console_deco)		"03"

#--> Code couleur texte
set config(console_txt)			"01"

#################
# Eva Commandes #
#################
# La liste des commandes 'Utilisateur' (niveau 0)
dict set commands	0	[list													\
						name	"Utilisateur"									\
						attr	"+v"											\
						cmd		[list											\
									"auth"										\
									"deauth"									\
									"copyright"									\
									"help"										\
									"showcommands"								\
									"seen"
								];
					];
# La liste des commandes 'Helpeur' (niveau 1)
dict set commands	1	[list													\
						name	"Helpeur"										\
						attr	"+p"											\
						cmd		[list											\
									"map"										\
									"whois"
								];
					];

# La liste des commandes 'Géofront' (niveau 2)
dict set commands	2	[list													\
						name	"Géofront"										\
						attr	"+op"											\
						cmd		[list											\
									"access"									\
									"newpass"									\
									"owner"										\
									"deowner"									\
									"protect"									\
									"deprotect"									\
									"ownerall"									\
									"deownerall"								\
									"protectall"								\
									"deprotectall"								\
									"op"										\
									"deop"										\
									"halfop"									\
									"dehalfop"									\
									"voice"										\
									"devoice"									\
									"opall"										\
									"deopall"									\
									"halfopall"									\
									"dehalfopall"								\
									"voiceall"									\
									"devoiceall"								\
									"kick"										\
									"kickall"									\
									"ban"										\
									"nickban"									\
									"kickban"									\
									"unban"										\
									"clearbans"									\
									"kill"										\
									"mode"										\
									"clearmodes"								\
									"clearallmodes"								\
									"topic"										\
									"inviteme"									\
									"invite"									\
									"wallops"									\
									"globops"									\
									"gline"										\
									"ungline"									\
									"shun"										\
									"unshun"									\
									"shunlist"									\
									"glinelist"									\
									"kline"										\
									"unkline"									\
									"klinelist"
								];
					];

# La liste des commandes 'Ircop' (niveau 3)
dict set commands	3	[list													\
						name	"Ircop"											\
						attr	"+mop"											\
						cmd		[list											\
									"clientlist"								\
									"trustlist"									\
									"say"										\
									"svsnick"									\
									"svsjoin"									\
									"svspart"									\
									"notice"									\
									"clearkline"								\
									"cleargline"								\
									"changline"									\
									"chankill"									\
									"join"										\
									"part"										\
									"list"										\
									"status"									\
									"closeadd"									\
									"closedel"									\
									"closelist"									\
									"closeclear"								\
									"nicklist"									\
									"identlist"									\
									"reallist"									\
									"hostlist"									\
									"chanlist"
								];
					];

# La liste des commandes 'Admin' (niveau 4)
dict set commands	4	[list													\
						name	"Admin"											\
						attr	"+nmop"											\
						cmd		[list											\
									"nickadd"									\
									"nickdel"									\
									"identadd"									\
									"identdel"									\
									"realadd"									\
									"realdel"									\
									"hostadd"									\
									"hostdel"									\
									"chanadd"									\
									"chandel"									\
									"trustadd"									\
									"trustdel"									\
									"clientadd"									\
									"clientdel"									\
									"client"									\
									"chanlog"									\
									"console"									\
									"backup"									\
									"restart"									\
									"die"										\
									"maxlogin"									\
									"protection"								\
									"accessadd"									\
									"accessdel"									\
									"accessmod"
								];
					];
# Aide aux commandes
# Syntaxe et description des commandes
#
# Pour chaque commandes un cmdhelp est necessaire avec le nom de la commande, la syntaxe, si necessaire (arguments a la commandes), la description en francais
# comme ci dessous.
#
#TODO: Verification ortographique et tournure de phrases
#TODO: Regrouper les commandes avec leurs ensemble, exemple auth et deauth l'un en dessous de l'autre
dict set cmdhelp prefixe 				{Commande <b>%s</b> : /msg %s %s};
dict lappend cmdhelp cmd 	help		[list 																					\
											{syntaxe}			{[nom-de-la-commande]}											\
											{description_text}	{Permet de voir l'aide détaillée de la commande.\nPour la liste des commandes, utilisez: showcommands}	\
											{description_val}	{}			
										];			

dict lappend cmdhelp cmd 	auth		[list 																					\
											{syntaxe}			{[Pseudonyme] <Mot-De-Passe>}									\
											{description_text}	{Permet de vous authentifier aux services.}						\
										]		;			
dict lappend cmdhelp cmd 	copyright	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir l'auteur de %s..}								\
											{description_val}	{${::EvaServ::SERVICE_BOT(name)}}								\
										];
dict lappend cmdhelp cmd 	deauth	[list 																						\
											{syntaxe}			{}																\
											{description_text}	{Permet de vous déauthentifier sur %s.}							\
											{description_val}	{${::EvaServ::SERVICE_BOT(name)}}								\
										];
dict lappend cmdhelp cmd 	seen	[list 																						\
											{syntaxe}			{<Pseudonyme>}													\
											{description_text}	{Permet de voir la dernière authentification du pseudo.}		\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	showcommands	[list 																				\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des commandes de %s.}					\
											{description_val}	{${::EvaServ::SCRIPT(name)}}									\
										];
dict lappend cmdhelp cmd 	map	[list 																							\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des serveurs.}							\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	whois	[list 																						\
											{syntaxe}			{<Pseudonyme>}													\
											{description_text}	{Permet de voir le whois d'un utilisateur.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	access	[list 																						\
											{syntaxe}			{<Pseudonyme>}													\
											{description_text}	{Permet de voir l'accès du pseudo.}								\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	ban	[list 																							\
											{syntaxe}			{<#Salon> <Mask>}												\
											{description_text}	{Permet de bannir un mask d'un salon.}							\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	clearallmodes	[list 																				\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de retirer tous les modes, tous les accès et tous les bans d'un salon.}		\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	clearbans	[list 																					\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de débannir tous les masks d'un salon.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	clearmodes	[list 																					\
											{syntaxe}			<#Salon>														\
											{description_text}	{Permet de retirer tous les modes d'un salon.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	dehalfop	[list 																					\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet de déhalfoper un utilisateur d'un salon.}				\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	dehalfopall	[list 																					\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de déhalfoper tous les utilisateurs d'un salon.}		\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	deop	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet de déoper un utilisateur d'un salon.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	deopall	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet de déoper tous les utilisateurs d'un salon.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	deowner	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet de retirer un utilisateur owner d'un salon.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	deownerall	[list 																					\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de retirer tous les utilisateurs owner d'un salon.}		\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	deprotect	[list 																					\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet de retirer un utilisateur protect d'un salon.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	deprotectall	[list 																				\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet de retirer tous les utilisateurs protect d'un salon.}	\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	devoice	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet de dévoicer un utilisateur d'un salon.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	devoiceall	[list 																					\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de dévoicer tous les utilisateurs d'un salon.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	gline	[list 																						\
											{syntaxe}			{<Pseudonyme-ou-IP> <Raison>}									\
											{description_text}	{Permet de gline un utilisateur du serveur.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	glinelist	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des glines.}							\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	shunlist	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des shuns.}							\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	globops	[list 																						\
											{syntaxe}			{<Message>}														\
											{description_text}	{Permet d'envoyer un message en globops à tous les ircops et admins.}	\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	halfop	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet d'halfoper un utilisateur d'un salon.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	halfopall	[list 																					\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet d'halfoper tous les utilisateurs d'un salon.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	invite	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet d'inviter un utilisateur sur un salon.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	inviteme	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de s'inviter sur %s.}									\
											{description_val}	{${::EvaServ::SERVICE_BOT(channel_logs)}}						\
										];
dict lappend cmdhelp cmd 	kick	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme> <Raison>}								\
											{description_text}	{Permet de kicker un utilisateur d'un salon.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	kickall	[list 																						\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de kicker tous les utilisateurs d'un salon.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	kickban	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme> <Raison>}								\
											{description_text}	{Permet de bannir et kicker un utilisateur d'un salon.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	kill	[list 																						\
											{syntaxe}			{<Pseudonyme> <Raison>}											\
											{description_text}	{Permet de killer un utilisateur du serveur.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	kline	[list 																						\
											{syntaxe}			{<Pseudonyme-ou-IP> <Raison>}									\
											{description_text}	{Permet de kline un utilisateur du serveur.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	klinelist	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des klines.}							\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	mode	[list 																						\
											{syntaxe}			{<Mot-De-Passe>}												\
											{description_text}	{Permet de changer les modes d'un salon.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	newpass	[list 																						\
											{syntaxe}			{<Mot-De-Passe>}												\
											{description_text}	{Permet de changer le mot de passe de votre accès.}				\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	nickban	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme> <Raison>}								\
											{description_text}	{Permet de bannir et kicker un utilisateur d'un salon en fonction de son pseudo.}	\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	op	[list 																							\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet d'oper un utilisateur d'un salon.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	opall	[list 																						\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet d'oper tous les utilisateurs d'un salon.}				\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	owner	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet de mêttre un utilisateur owner d'un salon.}				\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	ownerall	[list 																					\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de mêttre tous les utilisateurs owner d'un salon.}		\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	protect	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet de mêttre un utilisateur protect d'un salon.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	protectall	[list 																					\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de mêttre tous les utilisateurs protect d'un salon.}	\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	topic	[list 																						\
											{syntaxe}			{<#Salon> <Message>}											\
											{description_text}	{Permet de changer le topic d'un salon.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	unban	[list 																						\
											{syntaxe}			{<#Salon> <Mask>}												\
											{description_text}	{Permet de débannir un mask d'un salon.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	ungline	[list 																						\
											{syntaxe}			{<Ident@HostName-or-IP>}										\
											{description_text}	{Permet de supprimer un mask de la liste des glines.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	unshun	[list 																						\
											{syntaxe}			{<Pseudonyme> <Raison>}											\
											{description_text}	{Permet de unshun un utilisateur du serveur.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	unkline	[list 																						\
											{syntaxe}			{<Ident@HostName-or-IP>}										\
											{description_text}	{Permet de supprimer un mask de la liste des klines.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	voice	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet de voicer un utilisateur d'un salon.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	voiceall	[list 																					\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de voicer tous les utilisateurs d'un salon.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	wallops	[list 																						\
											{syntaxe}			{<Message>}														\
											{description_text}	{Permet d'envoyer un message en wallops à tous les utilisateurs.}	\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	changline	[list 																					\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de gline tous les utilisateurs d'un salon.}				\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	chankill	[list 																					\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de killer tous les utilisateurs d'un salon.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	chanlist	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des salons interdits.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	closeclear	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de vider la liste des salons fermés.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	cleargline	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de retirer tous les glines du serveur.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	clearkline	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de retirer tous les klines du serveur.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	clientlist	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des clients IRC interdits.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	closeadd	[list 																					\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de fermer un salon.}									\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	closelist	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des salons fermés.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	hostlist	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des hostnames interdites.}				\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	identlist	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des idents interdits.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	join	[list 																						\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de faire joindre %s sur un salon.}						\
											{description_val}	{${::EvaServ::SERVICE_BOT(name)}}								\
										];
dict lappend cmdhelp cmd 	list	[list 																						\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir les autojoin salons.}							\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	nicklist	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des pseudos interdits.}				\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	notice	[list 																						\
											{syntaxe}			{<Message>}														\
											{description_text}	{Permet d'envoyer une notice à tous les utilisateurs.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	part	[list 																						\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de faire partir %s d'un salon.}							\
											{description_val}	{${::EvaServ::SERVICE_BOT(name)}}								\
										];
dict lappend cmdhelp cmd 	reallist	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des realnames interdits.}				\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	say	[list 																							\
											{syntaxe}			{<#Salon> <Message>}											\
											{description_text}	{Permet d'envoyer un message sur un salon.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	status	[list 																						\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir les informations de %s.}						\
											{description_val}	{${::EvaServ::SCRIPT(name)}}									\
										];
dict lappend cmdhelp cmd 	svsjoin	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet de forcer un utilisateur à joindre un salon.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	svsnick	[list 																						\
											{syntaxe}			{<Ancien-Pseudonyme> <Nouveau-Pseudonyme>}						\
											{description_text}	{Permet de changer le pseudo d'un utilisateur.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	svspart	[list 																						\
											{syntaxe}			{<#Salon> <Pseudonyme>}											\
											{description_text}	{Permet de forcer un utilisateur à partir d'un salon.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	trustlist	[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de voir la liste des trusts.}							\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	closedel	[list 																					\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet d'ouvrir un salon fermé.}								\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	accessadd	[list 																					\
											{syntaxe}			{<Pseudonyme> <Mot-De-Passe> <level>}							\
											{description_text}	{Permet d'ajouter un accès sur %s.}								\
											{description_val}	{${::EvaServ::SCRIPT(name)}}									\
										];
dict lappend cmdhelp cmd 	chanadd	[list 																						\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet d'ajouter un salon interdit.}							\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	clientadd	[list 																					\
											{syntaxe}			{<Version>}														\
											{description_text}	{Permet d'ajouter un client IRC interdit.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	hostadd	[list 																						\
											{syntaxe}			{<HostName>}													\
											{description_text}	{Permet d'ajouter une hostname interdite.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	identadd	[list 																					\
											{syntaxe}			{<ident>}														\
											{description_text}	{Permet d'ajouter un ident interdit.}							\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	nickadd	[list 																						\
											{syntaxe}			{<Pseudonyme>}													\
											{description_text}	{Permet d'ajouter un pseudo interdit.}							\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	realadd	[list 																						\
											{syntaxe}			{<realname>}													\
											{description_text}	{Permet d'ajouter un realname interdit.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	trustadd	[list 																					\
											{syntaxe}			{<Mask>}														\
											{description_text}	{Permet d'ajouter un trust sur un mask.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	backup	[list 																						\
											{syntaxe}			{}																\
											{description_text}	{Permet de créer une sauvegarde des databases.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	chanlog	[list 																						\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de changer le salon de log de %s.}						\
											{description_val}	{${::EvaServ::SERVICE_BOT(name)}}								\
										];
dict lappend cmdhelp cmd 	client	[list 																						\
											{syntaxe}			{<On/Off>}														\
											{description_text}	{Permet d'activer ou désactiver les clients IRC interdits.}		\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	console	[list 																						\
											{syntaxe}			{<0/1/2/3>}														\
											{description_text}	{Permet d'activer la console des logs en fonction du level.}	\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	accessdel	[list 																					\
											{syntaxe}			{<Pseudonyme>}													\
											{description_text}	{Permet de supprimer un accès de %s.}							\
											{description_val}	{${::EvaServ::SCRIPT(name)}}									\
										];
dict lappend cmdhelp cmd 	chandel	[list 																						\
											{syntaxe}			{<#Salon>}														\
											{description_text}	{Permet de supprimer un salon interdit.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	clientdel	[list 																					\
											{syntaxe}			{<Version>}														\
											{description_text}	{Permet de supprimer un client IRC interdit.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	hostdel	[list 																						\
											{syntaxe}			{<hostname>}													\
											{description_text}	{Permet de supprimer une hostname interdite.}					\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	identdel	[list 																					\
											{syntaxe}			{<ident>}														\
											{description_text}	{Permet de supprimer un ident interdit.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	nickdel	[list 																						\
											{syntaxe}			{<Pseudonyme>}													\
											{description_text}	{Permet de supprimer un pseudo interdit.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	realdel	[list 																						\
											{syntaxe}			{<realname>}													\
											{description_text}	{Permet de supprimer un realname interdit.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	trustdel	[list 																					\
											{syntaxe}			{<Mask>}														\
											{description_text}	{Permet de supprimer le trust d'un mask.}						\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	die			[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet d'arrêter %s.}											\
											{description_val}	{${::EvaServ::SCRIPT(name)}}									\
										];
dict lappend cmdhelp cmd 	maxlogin	[list 																					\
											{syntaxe}			{<On/Off>}														\
											{description_text}	{Permet d'activer où désactiver la protection max login.}		\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	accessmod	[list 																					\
											{syntaxe}			{pass <Pseudonyme> <Mot-De-Passe>\nlevel <Pseudonyme> <Niveau>}	\
											{description_text}	{Permet de modifier un accès de %s.}							\
											{description_val}	{${::EvaServ::SCRIPT(name)}}									\
										];
dict lappend cmdhelp cmd 	protection	[list 																					\
											{syntaxe}			{<0/1/2/3/4>}													\
											{description_text}	{Permet d'activer la protection en fonction du level.}			\
											{description_val}	{}																\
										];
dict lappend cmdhelp cmd 	restart		[list 																					\
											{syntaxe}			{}																\
											{description_text}	{Permet de redémarrer %s.}										\
											{description_val}	{${::EvaServ::SCRIPT(name)}}									\
										];
dict lappend cmdhelp cmd 	shun		[list 																					\
											{syntaxe}			{<Pseudonyme-ou-IP> <Raison>}									\
											{description_text}	{Permet de shun un utilisateur du serveur.}						\
											{description_val}	{}																\
										];
